{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":7,"numPassedTests":153,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":7,"numTotalTests":153,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1742785710909,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Phoneme","constructor"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Phoneme constructor should create a phoneme with the given properties","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create a phoneme with the given properties"},{"ancestorTitles":["Phoneme","constructor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Phoneme constructor should parse vectors string into array","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should parse vectors string into array"},{"ancestorTitles":["Phoneme","clone()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phoneme clone() should create a deep copy of the phoneme","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should create a deep copy of the phoneme"},{"ancestorTitles":["Phoneme","clone()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phoneme clone() should create a new vectors array in cloned phoneme","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create a new vectors array in cloned phoneme"},{"ancestorTitles":["Phoneme","static fromLine()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Phoneme static fromLine() should create a phoneme from a formatted line","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should create a phoneme from a formatted line"},{"ancestorTitles":["Phoneme","static fromLine()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phoneme static fromLine() should return null for invalid line format","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return null for invalid line format"},{"ancestorTitles":["Phoneme","toLine()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phoneme toLine() should convert phoneme to formatted line string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should convert phoneme to formatted line string"},{"ancestorTitles":["Phoneme","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phoneme edge cases should handle empty vectors string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty vectors string"},{"ancestorTitles":["Phoneme","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phoneme edge cases should handle single vector","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle single vector"}],"endTime":1742785711446,"message":"","name":"/Users/ianculleton/Documents/node_projects/baron-linguistics/src/tests/Phoneme.test.ts","startTime":1742785711039,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Word","constructor"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Word constructor should create a word with the given properties","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create a word with the given properties"},{"ancestorTitles":["Word","constructor"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Word constructor should split IPA string into ipaParts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should split IPA string into ipaParts"},{"ancestorTitles":["Word","clone()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Word clone() should create a deep copy of the word","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should create a deep copy of the word"},{"ancestorTitles":["Word","clone()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Word clone() should create a new ipaParts array in cloned word","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create a new ipaParts array in cloned word"},{"ancestorTitles":["Word","lemma handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Word lemma handling should allow setting a lemma reference","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should allow setting a lemma reference"},{"ancestorTitles":["Word","ipaParts manipulation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Word ipaParts manipulation should update ipa string when ipaParts is modified","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update ipa string when ipaParts is modified"},{"ancestorTitles":["Word","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Word edge cases should handle empty IPA string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty IPA string"},{"ancestorTitles":["Word","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Word edge cases should handle single phoneme IPA string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle single phoneme IPA string"}],"endTime":1742785711458,"message":"","name":"/Users/ianculleton/Documents/node_projects/baron-linguistics/src/tests/Word.test.ts","startTime":1742785711044,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PhoneMapPipeline","constructor"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMapPipeline constructor should create a pipeline with the given rules","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create a pipeline with the given rules"},{"ancestorTitles":["PhoneMapPipeline","constructor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMapPipeline constructor should accept an empty ruleset","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should accept an empty ruleset"},{"ancestorTitles":["PhoneMapPipeline","run()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMapPipeline run() should apply a single rule correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply a single rule correctly"},{"ancestorTitles":["PhoneMapPipeline","run()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMapPipeline run() should apply multiple rules in sequence","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply multiple rules in sequence"},{"ancestorTitles":["PhoneMapPipeline","run()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMapPipeline run() should not modify the input word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not modify the input word"},{"ancestorTitles":["PhoneMapPipeline","run()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMapPipeline run() should handle empty ruleset","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty ruleset"},{"ancestorTitles":["PhoneMapPipeline","run()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMapPipeline run() should handle rules that don't match any phonemes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle rules that don't match any phonemes"},{"ancestorTitles":["PhoneMapPipeline","run()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMapPipeline run() should handle multiple rules where later rules depend on earlier ones","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle multiple rules where later rules depend on earlier ones"},{"ancestorTitles":["PhoneMapPipeline","run()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMapPipeline run() should preserve word properties other than ipaParts","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should preserve word properties other than ipaParts"}],"endTime":1742785711462,"message":"","name":"/Users/ianculleton/Documents/node_projects/baron-linguistics/src/tests/PhoneMapPipeline.test.ts","startTime":1742785711039,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PhoneMap","constructor"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap constructor should create a PhoneMap with the given properties","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create a PhoneMap with the given properties"},{"ancestorTitles":["PhoneMap","clone()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap clone() should create a deep copy of the PhoneMap","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create a deep copy of the PhoneMap"},{"ancestorTitles":["PhoneMap","mutate()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap mutate() should return the mapped phoneme when valid","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return the mapped phoneme when valid"},{"ancestorTitles":["PhoneMap","mutate()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap mutate() should return the input phoneme when target or mapTo not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return the input phoneme when target or mapTo not found"},{"ancestorTitles":["PhoneMap","apply()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap apply() should apply phonological rule to matching environment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply phonological rule to matching environment"},{"ancestorTitles":["PhoneMap","apply()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap apply() should not modify word when environment doesn't match","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not modify word when environment doesn't match"},{"ancestorTitles":["PhoneMap","toLine()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap toLine() should convert PhoneMap to formatted string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should convert PhoneMap to formatted string"},{"ancestorTitles":["PhoneMap","matchesEnvironment()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap matchesEnvironment() should match literal phoneme environments","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should match literal phoneme environments"},{"ancestorTitles":["PhoneMap","matchesEnvironment()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap matchesEnvironment() should match [vowel] selector","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should match [vowel] selector"},{"ancestorTitles":["PhoneMap","matchesEnvironment()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap matchesEnvironment() should match [consonant] selector","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should match [consonant] selector"},{"ancestorTitles":["PhoneMap","matchesEnvironment()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap matchesEnvironment() should match * (wildcard) selector","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should match * (wildcard) selector"},{"ancestorTitles":["PhoneMap","matchesEnvironment()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap matchesEnvironment() should handle word boundaries correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle word boundaries correctly"},{"ancestorTitles":["PhoneMap","matchesEnvironment()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap matchesEnvironment() should return false for invalid environment format","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false for invalid environment format"},{"ancestorTitles":["PhoneMap","feature selectors"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap feature selectors should match [plosive] selector","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should match [plosive] selector"},{"ancestorTitles":["PhoneMap","feature selectors"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap feature selectors should match [voiced] selector","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should match [voiced] selector"},{"ancestorTitles":["PhoneMap","feature selectors"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap feature selectors should match [voiceless] selector","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should match [voiceless] selector"},{"ancestorTitles":["PhoneMap","feature selectors"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap feature selectors should match [bilabial] selector","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should match [bilabial] selector"},{"ancestorTitles":["PhoneMap","feature selectors"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PhoneMap feature selectors should match [palatal] selector","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should match [palatal] selector"}],"endTime":1742785711468,"message":"","name":"/Users/ianculleton/Documents/node_projects/baron-linguistics/src/tests/PhoneMap.test.ts","startTime":1742785711049,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Phonology","Phoneme Management","addPhoneme()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Phonology Phoneme Management addPhoneme() should add a phoneme to the phonology","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should add a phoneme to the phonology"},{"ancestorTitles":["Phonology","Phoneme Management","updatePhoneme()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phonology Phoneme Management updatePhoneme() should update an existing phoneme","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update an existing phoneme"},{"ancestorTitles":["Phonology","Phoneme Management","updatePhoneme()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Phonology Phoneme Management updatePhoneme() should not modify other phonemes when updating","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not modify other phonemes when updating"},{"ancestorTitles":["Phonology","Phoneme Management","lookupPhoneme()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phonology Phoneme Management lookupPhoneme() should find phonemes by IPA key","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should find phonemes by IPA key"},{"ancestorTitles":["Phonology","Phoneme Management","lookupPhoneme()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phonology Phoneme Management lookupPhoneme() should return empty array when no matches found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return empty array when no matches found"},{"ancestorTitles":["Phonology","PhoneMap Management","addPhoneMap()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phonology PhoneMap Management addPhoneMap() should add a phoneMap to the phonology","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should add a phoneMap to the phonology"},{"ancestorTitles":["Phonology","PhoneMap Management","updatePhoneMap()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phonology PhoneMap Management updatePhoneMap() should update an existing phoneMap","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update an existing phoneMap"},{"ancestorTitles":["Phonology","PhoneMap Management","lookupPhoneMap()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phonology PhoneMap Management lookupPhoneMap() should find phoneMaps by environment","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should find phoneMaps by environment"},{"ancestorTitles":["Phonology","Word Processing","decompose()"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"Phonology Word Processing decompose() should break word into constituent phonemes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should break word into constituent phonemes"},{"ancestorTitles":["Phonology","Word Processing","decompose()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Phonology Word Processing decompose() should return cloned phonemes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return cloned phonemes"},{"ancestorTitles":["Phonology","Word Processing","mutate()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Phonology Word Processing mutate() should apply phonological rules to word","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should apply phonological rules to word"},{"ancestorTitles":["Phonology","Word Processing","mutate()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Phonology Word Processing mutate() should not modify original word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not modify original word"},{"ancestorTitles":["Phonology","Serialization","toTable()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Phonology Serialization toTable() should generate formatted table string","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should generate formatted table string"}],"endTime":1742785711526,"message":"","name":"/Users/ianculleton/Documents/node_projects/baron-linguistics/src/tests/Phonology.test.ts","startTime":1742785711045,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Language","Language.addWord (delegates to Vocabulary.addWord)"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.addWord (delegates to Vocabulary.addWord) should add a word to the language","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should add a word to the language"},{"ancestorTitles":["Language","Language.addPhoneme (delegates to Phonology.addPhoneme)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.addPhoneme (delegates to Phonology.addPhoneme) should add a phoneme to the language","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should add a phoneme to the language"},{"ancestorTitles":["Language","Language.addPhoneMap (delegates to Phonology.addPhoneMap)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.addPhoneMap (delegates to Phonology.addPhoneMap) should add a phoneMap (a.k.a. mutation) to the language","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should add a phoneMap (a.k.a. mutation) to the language"},{"ancestorTitles":["Language","Language.addInflection (delegates to Morphology.addBoundMorpheme)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.addInflection (delegates to Morphology.addBoundMorpheme) should add an inflection to the language","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should add an inflection to the language"},{"ancestorTitles":["Language","Language.addInflection (delegates to Morphology.addBoundMorpheme)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.addInflection (delegates to Morphology.addBoundMorpheme) should associate an inflection with a set of characteristics","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should associate an inflection with a set of characteristics"},{"ancestorTitles":["Language","Language.updateWord (delegates to Vocabulary.updateWord)"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.updateWord (delegates to Vocabulary.updateWord) should update a word in the language","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update a word in the language"},{"ancestorTitles":["Language","Language.updatePhoneme (delegates to Phonology.updatePhoneme)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.updatePhoneme (delegates to Phonology.updatePhoneme) should update a phoneme in the language","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update a phoneme in the language"},{"ancestorTitles":["Language","Language.updatePhoneMap (delegates to Phonology.updatePhoneMap)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.updatePhoneMap (delegates to Phonology.updatePhoneMap) should update a phoneMap in the language","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update a phoneMap in the language"},{"ancestorTitles":["Language","Language.updateInflection (delegates to Morphology.updateBoundMorpheme)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.updateInflection (delegates to Morphology.updateBoundMorpheme) should update a bound morpheme in the language","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update a bound morpheme in the language"},{"ancestorTitles":["Language","Language.getWord (delegates to Vocabulary.lookup)"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getWord (delegates to Vocabulary.lookup) should return an empty array when looking up an empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return an empty array when looking up an empty string"},{"ancestorTitles":["Language","Language.getWord (delegates to Vocabulary.lookup)"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getWord (delegates to Vocabulary.lookup) should return an empty array when looking up an unknown word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return an empty array when looking up an unknown word"},{"ancestorTitles":["Language","Language.getWord (delegates to Vocabulary.lookup)"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getWord (delegates to Vocabulary.lookup) should return the correct word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return the correct word"},{"ancestorTitles":["Language","Language.getWord (delegates to Vocabulary.lookup)"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getWord (delegates to Vocabulary.lookup) should return multiple words if the word has multiple categories","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return multiple words if the word has multiple categories"},{"ancestorTitles":["Language","Language.getPhoneme (delegates to Phonology.lookupPhoneme)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getPhoneme (delegates to Phonology.lookupPhoneme) should return an empty array when looking up an empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return an empty array when looking up an empty string"},{"ancestorTitles":["Language","Language.getPhoneme (delegates to Phonology.lookupPhoneme)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getPhoneme (delegates to Phonology.lookupPhoneme) should return an empty array when looking up an unknown phoneme","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return an empty array when looking up an unknown phoneme"},{"ancestorTitles":["Language","Language.getPhoneme (delegates to Phonology.lookupPhoneme)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getPhoneme (delegates to Phonology.lookupPhoneme) should return the correct phoneme","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return the correct phoneme"},{"ancestorTitles":["Language","Language.getPhoneMap (delegates to Phonology.lookupPhoneMap)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getPhoneMap (delegates to Phonology.lookupPhoneMap) should return an empty array when looking up an empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return an empty array when looking up an empty string"},{"ancestorTitles":["Language","Language.getPhoneMap (delegates to Phonology.lookupPhoneMap)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getPhoneMap (delegates to Phonology.lookupPhoneMap) should return an empty array when looking up an unknown phoneMap","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return an empty array when looking up an unknown phoneMap"},{"ancestorTitles":["Language","Language.getPhoneMap (delegates to Phonology.lookupPhoneMap)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getPhoneMap (delegates to Phonology.lookupPhoneMap) should return the correct phoneMap","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return the correct phoneMap"},{"ancestorTitles":["Language","Language.getPhoneMap (delegates to Phonology.lookupPhoneMap)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getPhoneMap (delegates to Phonology.lookupPhoneMap) should return multiple phoneMaps if the phoneMap has multiple categories","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return multiple phoneMaps if the phoneMap has multiple categories"},{"ancestorTitles":["Language","Language.getInflections (delegates to Phonology.cacheToMorpheme)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getInflections (delegates to Phonology.cacheToMorpheme) should return an empty array when looking up an empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return an empty array when looking up an empty string"},{"ancestorTitles":["Language","Language.getInflections (delegates to Phonology.cacheToMorpheme)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getInflections (delegates to Phonology.cacheToMorpheme) should return an empty array when looking up an unknown inflection","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return an empty array when looking up an unknown inflection"},{"ancestorTitles":["Language","Language.getInflections (delegates to Phonology.cacheToMorpheme)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getInflections (delegates to Phonology.cacheToMorpheme) should return the correct inflection","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return the correct inflection"},{"ancestorTitles":["Language","Language.getInflections (delegates to Phonology.cacheToMorpheme)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.getInflections (delegates to Phonology.cacheToMorpheme) should return multiple inflections if the inflection has multiple categories","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return multiple inflections if the inflection has multiple categories"},{"ancestorTitles":["Language","Language.decompose (delegates to Phonology.decompose and Morphology.decompose)"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.decompose (delegates to Phonology.decompose and Morphology.decompose) should decompose a word into phonemes.","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should decompose a word into phonemes."},{"ancestorTitles":["Language","Language.decompose (delegates to Phonology.decompose and Morphology.decompose)"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.decompose (delegates to Phonology.decompose and Morphology.decompose) should decompose a word into morphemes.","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should decompose a word into morphemes."},{"ancestorTitles":["Language","Language.mutate (delegates to Phonology.mutate and Morphology.mutate)"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Language Language.mutate (delegates to Phonology.mutate and Morphology.mutate) should mutate a word in the language","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should mutate a word in the language"}],"endTime":1742785711596,"message":"","name":"/Users/ianculleton/Documents/node_projects/baron-linguistics/src/tests/Language.test.ts","startTime":1742785711054,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Selectors","Basic selectors"],"duration":30,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Basic selectors should select by literal IPA symbols","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select by literal IPA symbols"},{"ancestorTitles":["Selectors","Basic selectors"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Basic selectors selector * should select all phonemes on left side of environment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"selector * should select all phonemes on left side of environment"},{"ancestorTitles":["Selectors","Basic selectors"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Basic selectors selector * should select all phonemes on right side of environment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"selector * should select all phonemes on right side of environment"},{"ancestorTitles":["Selectors","Category selectors","[vowel]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Category selectors [vowel] should select only vowel phonemes (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only vowel phonemes (left-hand side)"},{"ancestorTitles":["Selectors","Category selectors","[vowel]"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Category selectors [vowel] should select only vowel phonemes (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only vowel phonemes (right-hand side)"},{"ancestorTitles":["Selectors","Category selectors","[consonant]"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Category selectors [consonant] should select only consonant phonemes (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only consonant phonemes (left-hand side)"},{"ancestorTitles":["Selectors","Category selectors","[consonant]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Category selectors [consonant] should select only consonant phonemes (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only consonant phonemes (right-hand side)"},{"ancestorTitles":["Selectors","Height selectors","[open]"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Height selectors [open] should select only phonemes with the \"open\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"open\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Height selectors","[open]"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Height selectors [open] should select only consonant phonemes (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only consonant phonemes (right-hand side)"},{"ancestorTitles":["Selectors","Height selectors","[openMid]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Height selectors [openMid] should select only phonemes with the \"openMid\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"openMid\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Height selectors","[openMid]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Height selectors [openMid] should select only phonemes with the \"openMid\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"openMid\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Height selectors","[mid]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Height selectors [mid] should select only phonemes with the \"mid\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"mid\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Height selectors","[mid]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Height selectors [mid] should select only phonemes with the \"mid\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"mid\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Height selectors","[closeMid]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Height selectors [closeMid] should select only phonemes with the \"closeMid\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"closeMid\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Height selectors","[closeMid]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Height selectors [closeMid] should select only phonemes with the \"closeMid\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"closeMid\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Height selectors","[close]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Height selectors [close] should select only phonemes with the \"close\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"close\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Height selectors","[close]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Height selectors [close] should select only phonemes with the \"close\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"close\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Position selectors","[front]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Position selectors [front] should select only phonemes with the \"front\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"front\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Position selectors","[front]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Position selectors [front] should select only phonemes with the \"front\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"front\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Position selectors","[central]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Position selectors [central] should select only phonemes with the \"central\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"central\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Position selectors","[central]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Position selectors [central] should select only phonemes with the \"central\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"central\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Position selectors","[back]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Position selectors [back] should select only phonemes with the \"back\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"back\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Position selectors","[back]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Position selectors [back] should select only phonemes with the \"back\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"back\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Lip position selectors","[rounded]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Lip position selectors [rounded] should select only phonemes with the \"rounded\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"rounded\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Lip position selectors","[rounded]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Lip position selectors [rounded] should select only phonemes with the \"rounded\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"rounded\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Lip position selectors","[unrounded]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Lip position selectors [unrounded] should select only phonemes with the \"unrounded\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"unrounded\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Lip position selectors","[unrounded]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Lip position selectors [unrounded] should select only phonemes with the \"unrounded\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"unrounded\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Special vowel selectors","[diphthong]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Special vowel selectors [diphthong] should select only phonemes with the \"diphthong\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"diphthong\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Special vowel selectors","[diphthong]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Special vowel selectors [diphthong] should select only phonemes with the \"diphthong\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"diphthong\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[plosive]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [plosive] should select only phonemes with the \"plosive\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"plosive\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[plosive]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [plosive] should select only phonemes with the \"plosive\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"plosive\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[nasal]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [nasal] should select only phonemes with the \"nasal\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"nasal\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[nasal]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [nasal] should select only phonemes with the \"nasal\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"nasal\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[trill]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [trill] should select only phonemes with the \"trill\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"trill\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[trill]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [trill] should select only phonemes with the \"trill\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"trill\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[tap]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [tap] should select only phonemes with the \"tap\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"tap\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[tap]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [tap] should select only phonemes with the \"tap\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"tap\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[fricative]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [fricative] should select only phonemes with the \"fricative\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"fricative\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[fricative]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [fricative] should select only phonemes with the \"fricative\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"fricative\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[lateral]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [lateral] should select only phonemes with the \"lateral\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"lateral\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[lateral]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [lateral] should select only phonemes with the \"lateral\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"lateral\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[approximant]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [approximant] should select only phonemes with the \"approximant\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"approximant\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Manner of articulation selectors","[approximant]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Manner of articulation selectors [approximant] should select only phonemes with the \"approximant\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"approximant\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[bilabial]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [bilabial] should select only phonemes with the \"bilabial\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"bilabial\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[bilabial]"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [bilabial] should select only phonemes with the \"bilabial\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"bilabial\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[labiodental]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [labiodental] should select only phonemes with the \"labiodental\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"labiodental\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[labiodental]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [labiodental] should select only phonemes with the \"labiodental\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"labiodental\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[dental]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [dental] should select only phonemes with the \"dental\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"dental\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[dental]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [dental] should select only phonemes with the \"dental\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"dental\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[alveolar]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [alveolar] should select only phonemes with the \"alveolar\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"alveolar\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[alveolar]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [alveolar] should select only phonemes with the \"alveolar\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"alveolar\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[postalveolar]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [postalveolar] should select only phonemes with the \"postalveolar\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"postalveolar\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[postalveolar]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [postalveolar] should select only phonemes with the \"postalveolar\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"postalveolar\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[retroflex]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [retroflex] should select only phonemes with the \"retroflex\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"retroflex\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[retroflex]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [retroflex] should select only phonemes with the \"retroflex\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"retroflex\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[palatal]"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [palatal] should select only phonemes with the \"palatal\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"palatal\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[palatal]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [palatal] should select only phonemes with the \"palatal\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"palatal\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[velar]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [velar] should select only phonemes with the \"velar\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"velar\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[velar]"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [velar] should select only phonemes with the \"velar\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"velar\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[uvular]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [uvular] should select only phonemes with the \"uvular\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"uvular\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[uvular]"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [uvular] should select only phonemes with the \"uvular\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"uvular\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[pharyngeal]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [pharyngeal] should select only phonemes with the \"pharyngeal\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"pharyngeal\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[pharyngeal]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [pharyngeal] should select only phonemes with the \"pharyngeal\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"pharyngeal\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[glottal]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [glottal] should select only phonemes with the \"glottal\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"glottal\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Place of articulation selectors","[glottal]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Place of articulation selectors [glottal] should select only phonemes with the \"glottal\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"glottal\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Voicing selectors","[voiced]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Voicing selectors [voiced] should select only phonemes with the \"voiced\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"voiced\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Voicing selectors","[voiced]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Voicing selectors [voiced] should select only phonemes with the \"voiced\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"voiced\" vector (right-hand side)"},{"ancestorTitles":["Selectors","Voicing selectors","[voiceless]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Voicing selectors [voiceless] should select only phonemes with the \"voiceless\" vector (left-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"voiceless\" vector (left-hand side)"},{"ancestorTitles":["Selectors","Voicing selectors","[voiceless]"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Selectors Voicing selectors [voiceless] should select only phonemes with the \"voiceless\" vector (right-hand side)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should select only phonemes with the \"voiceless\" vector (right-hand side)"}],"endTime":1742785711775,"message":"","name":"/Users/ianculleton/Documents/node_projects/baron-linguistics/src/tests/Selectors.test.ts","startTime":1742785711045,"status":"passed","summary":""}],"wasInterrupted":false}
